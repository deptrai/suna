apiVersion: apps/v1
kind: Deployment
metadata:
  name: onchain-analysis
  namespace: chainlens-crypto
  labels:
    app: onchain-analysis
    service: crypto-analysis
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: onchain-analysis
  template:
    metadata:
      labels:
        app: onchain-analysis
        service: crypto-analysis
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: onchain-analysis
        image: chainlens/onchain-analysis:latest
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: SERVICE_NAME
          value: "onchain-analysis"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: chainlens-secrets
              key: microservices-database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: chainlens-secrets
              key: redis-url
        - name: MORALIS_API_KEY
          valueFrom:
            secretKeyRef:
              name: chainlens-secrets
              key: moralis-api-key
        - name: COINGECKO_API_KEY
          valueFrom:
            secretKeyRef:
              name: chainlens-secrets
              key: coingecko-api-key
        - name: DEXSCREENER_API_URL
          value: "https://api.dexscreener.com"
        - name: DEFILLAMA_API_URL
          value: "https://api.llama.fi"
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
      securityContext:
        fsGroup: 1001
      serviceAccountName: onchain-analysis
      automountServiceAccountToken: false
---
apiVersion: v1
kind: Service
metadata:
  name: onchain-analysis-service
  namespace: chainlens-crypto
  labels:
    app: onchain-analysis
    service: crypto-analysis
spec:
  type: ClusterIP
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
    name: http
  selector:
    app: onchain-analysis
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: onchain-analysis
  namespace: chainlens-crypto
  labels:
    app: onchain-analysis
automountServiceAccountToken: false
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: onchain-analysis-hpa
  namespace: chainlens-crypto
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: onchain-analysis
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
