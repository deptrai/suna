# =====================================================
# ChainLens Crypto Services Environment Configuration
# =====================================================

# =====================================================
# GENERAL CONFIGURATION
# =====================================================
NODE_ENV=development
LOG_LEVEL=debug

# =====================================================
# DATABASE CONFIGURATION
# =====================================================

# Microservices PostgreSQL Database
DATABASE_URL=postgresql://chainlens:your_password@localhost:5433/chainlens_microservices
POSTGRES_PASSWORD=your_secure_password

# Supabase Configuration (for ChainLens-Core integration)
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_JWT_SECRET=your-supabase-jwt-secret
SUPABASE_SERVICE_KEY=your-supabase-service-key

# =====================================================
# REDIS CONFIGURATION
# =====================================================
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password
REDIS_DB=0

# =====================================================
# SERVICE PORTS
# =====================================================
CHAINLENS_CORE_PORT=3006
ONCHAIN_SERVICE_PORT=3001
SENTIMENT_SERVICE_PORT=3002
TOKENOMICS_SERVICE_PORT=3003
TEAM_SERVICE_PORT=3004

# =====================================================
# EXTERNAL API KEYS
# =====================================================

# Moralis API (Blockchain Data)
MORALIS_API_KEY=your_moralis_api_key

# CoinGecko API (Market Data)
COINGECKO_API_KEY=your_coingecko_api_key

# DexScreener API (No key required - free tier)
DEXSCREENER_API_URL=https://api.dexscreener.com

# DeFiLlama API (No key required - free tier)
DEFILLAMA_API_URL=https://api.llama.fi

# Twitter API (Social Sentiment)
TWITTER_BEARER_TOKEN=your_twitter_bearer_token
TWITTER_API_KEY=your_twitter_api_key
TWITTER_API_SECRET=your_twitter_api_secret

# News API (News Sentiment)
NEWS_API_KEY=your_news_api_key

# Reddit API (Social Sentiment)
REDDIT_CLIENT_ID=your_reddit_client_id
REDDIT_CLIENT_SECRET=your_reddit_client_secret
REDDIT_USER_AGENT=ChainLens-Crypto-Analysis/1.0

# GitHub API (Team Verification)
GITHUB_TOKEN=your_github_personal_access_token

# LinkedIn API (Team Verification)
LINKEDIN_API_KEY=your_linkedin_api_key
LINKEDIN_API_SECRET=your_linkedin_api_secret

# =====================================================
# SECURITY CONFIGURATION
# =====================================================

# JWT Configuration
JWT_SECRET=your_jwt_secret_key
JWT_EXPIRES_IN=24h

# Encryption
ENCRYPTION_KEY=your_32_character_encryption_key

# CORS Configuration
CORS_ORIGIN=http://localhost:3000,https://your-frontend-domain.com

# =====================================================
# RATE LIMITING CONFIGURATION
# =====================================================

# Global Rate Limiting
THROTTLE_TTL=60
THROTTLE_LIMIT=100

# Tier-based Rate Limits (requests per hour)
FREE_TIER_LIMIT=10
PRO_TIER_LIMIT=1000
ENTERPRISE_TIER_LIMIT=10000

# =====================================================
# CACHING CONFIGURATION
# =====================================================

# Cache TTL (in seconds)
CACHE_TTL_SHORT=180      # 3 minutes
CACHE_TTL_MEDIUM=900     # 15 minutes
CACHE_TTL_LONG=3600      # 1 hour

# Cache Key Prefixes
CACHE_PREFIX_ONCHAIN=onchain
CACHE_PREFIX_SENTIMENT=sentiment
CACHE_PREFIX_TOKENOMICS=tokenomics
CACHE_PREFIX_TEAM=team

# =====================================================
# MONITORING CONFIGURATION
# =====================================================

# Prometheus Metrics
METRICS_ENABLED=true
METRICS_PORT=9090

# Grafana
GRAFANA_PASSWORD=admin
GRAFANA_PORT=3000

# Health Check Configuration
HEALTH_CHECK_TIMEOUT=5000
HEALTH_CHECK_INTERVAL=30000

# =====================================================
# EXTERNAL API CONFIGURATION
# =====================================================

# HTTP Client Configuration
HTTP_TIMEOUT=30000
HTTP_MAX_REDIRECTS=5
HTTP_RETRIES=3
HTTP_RETRY_DELAY=1000

# Circuit Breaker Configuration
CIRCUIT_BREAKER_THRESHOLD=5
CIRCUIT_BREAKER_TIMEOUT=60000
CIRCUIT_BREAKER_RESET_TIMEOUT=30000

# =====================================================
# QUEUE CONFIGURATION
# =====================================================

# Bull Queue Configuration
QUEUE_REDIS_HOST=localhost
QUEUE_REDIS_PORT=6379
QUEUE_REDIS_PASSWORD=your_redis_password

# Job Configuration
JOB_ATTEMPTS=3
JOB_BACKOFF_DELAY=2000
JOB_REMOVE_ON_COMPLETE=10
JOB_REMOVE_ON_FAIL=5

# =====================================================
# DEVELOPMENT CONFIGURATION
# =====================================================

# Development Mode Settings
DEV_ENABLE_SWAGGER=true
DEV_ENABLE_CORS=true
DEV_ENABLE_DETAILED_LOGGING=true

# Database Development Settings
DEV_DB_SYNCHRONIZE=true
DEV_DB_LOGGING=true
DEV_DB_DROP_SCHEMA=false

# =====================================================
# PRODUCTION CONFIGURATION
# =====================================================

# Production Mode Settings (set NODE_ENV=production)
PROD_ENABLE_SWAGGER=false
PROD_ENABLE_DETAILED_LOGGING=false
PROD_SSL_REQUIRED=true

# Production Database Settings
PROD_DB_SYNCHRONIZE=false
PROD_DB_LOGGING=false
PROD_DB_SSL=true

# =====================================================
# TESTING CONFIGURATION
# =====================================================

# Test Database
TEST_DATABASE_URL=postgresql://chainlens:test_password@localhost:5434/chainlens_test

# Test Redis
TEST_REDIS_URL=redis://localhost:6380

# Test API Keys (use test/sandbox keys)
TEST_MORALIS_API_KEY=test_moralis_key
TEST_COINGECKO_API_KEY=test_coingecko_key
TEST_TWITTER_BEARER_TOKEN=test_twitter_token

# =====================================================
# DOCKER CONFIGURATION
# =====================================================

# Docker Compose Override
COMPOSE_PROJECT_NAME=chainlens-crypto
COMPOSE_FILE=docker-compose.dev.yml

# Container Configuration
CONTAINER_MEMORY_LIMIT=512m
CONTAINER_CPU_LIMIT=0.5

# =====================================================
# KUBERNETES CONFIGURATION
# =====================================================

# Kubernetes Namespace
K8S_NAMESPACE=chainlens-crypto

# Resource Limits
K8S_MEMORY_REQUEST=256Mi
K8S_MEMORY_LIMIT=512Mi
K8S_CPU_REQUEST=200m
K8S_CPU_LIMIT=500m

# =====================================================
# BACKUP CONFIGURATION
# =====================================================

# Database Backup
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30

# =====================================================
# ALERTING CONFIGURATION
# =====================================================

# Slack Notifications
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/slack/webhook
SLACK_CHANNEL=#chainlens-alerts

# Email Notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password
ALERT_EMAIL_TO=team@chainlens.com

# =====================================================
# FEATURE FLAGS
# =====================================================

# Feature Toggles
FEATURE_SENTIMENT_ANALYSIS=true
FEATURE_TEAM_VERIFICATION=true
FEATURE_ADVANCED_METRICS=true
FEATURE_REAL_TIME_UPDATES=true

# Beta Features
BETA_MULTI_CHAIN_ANALYSIS=false
BETA_AI_RISK_SCORING=false
BETA_SOCIAL_TRADING_SIGNALS=false
